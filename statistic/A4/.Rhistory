claimNet.model$residuals
exp(predict(claimNet.model, data) + (sd(claimNet$CosteInicio.log)/2))
exp(predict(claimNet.model, data))
exp(predict(claimNet.model, data) + (sd(claimNet$CosteInicio.log)/2))
sd(claimNet$CosteFinal.log)
sd(claimNet$CosteFinal.log) / 2
sd(claimNet$CosteFinal.log) / 2
exp(predict(claimNet.model, data) + (sd(claimNet$CosteFinal.log)/2))
predict(claimNet.model, data)
predict(claimNet.model, data) + (sd(claimNet$CosteFinal.log)/2)
exp(predict(claimNet.model, data) + (sd(claimNet$CosteFinal.log)/2))
exp(predict(claimNet.model, data))
exp(predict(claimNet.model, data) + (sd(claimNet$CosteFinal.log)/2))
exp(predict(claimNet.model, data))
sig <- summary(claimNet.model)$dispersion
pred <- exp(predict(claimNet.model) + 0.5 * log.lin.sig)
sig <- summary(claimNet.model)$dispersion
pred <- exp(predict(claimNet.model) + 0.5 * sig)
pred
sig
claimNet.model
claimNet.model$residuals
res <- claimNet.model$residuals
pred <- exp(predict(claimNet.model) + 0.5 * res)
pred
pred <- exp(predict(claimNet.model, data) + 0.5 * res)
pred
pred <- exp(predict(claimNet.model, data) + 0.5 * sd(res))
pred
claimNet.model2 <- glm(CosteFinal.log ~ Edad + Sexo + Estado + Dependientes + OtrosDepend + Salario + Jornada + HorasSemana + DiasSemana + Clasificacion + RiesgoSM + CosteInicio.log, data = claimNet)
coef(claimNet.model2)
coef(claimNet.model)
summary(claimNet.model2)
summary(claimNet.model2)$dispersion
summary(claimNet.model)
summary(claimNet.model$residuals)
summary(sd(claimNet.model$residuals))
sd(claimNet.model$residuals)
summary(claimNet.model2)$dispersion
summary(claimNet.model)
claimNet.model2 <- glm(CosteFinal ~ Edad + Sexo + Estado + Dependientes + OtrosDepend + Salario + Jornada + HorasSemana + DiasSemana + Clasificacion + RiesgoSM + CosteInicio.log, data = claimNet, family=poisson)
claimNet.model$residuals
pred <- exp(predict(claimNet.model, data) + 0.5 * sd.res)
pred
claimNet.model <- glm(CosteFinal.log ~ Edad + Sexo + Estado + Dependientes + OtrosDepend + Salario + Jornada + HorasSemana + DiasSemana + Clasificacion + RiesgoSM + CosteInicio.log, data = claimNet)
coef(claimNet.model)
summary(claimNet.model)
summary(claimNet.model)$r.squared
claimNet.model$fitted.values
sqrt( 0.6244672 )
sqrt( 0.6244672 )
# fem la predicció
pred <- exp(predict(claimNet.model, data) + 0.5 * summary(claimNet.model)$dispersion)
pred
claimNet.model <- glm(CosteFinal.log ~ Edad + Sexo + Estado + Dependientes + OtrosDepend + Salario + Jornada + HorasSemana + DiasSemana + Clasificacion + RiesgoSM + CosteInicio.log, data = claimNet)
summary(claimNet.model)
claimNet.model <- lm(CosteFinal.log ~ Edad + Sexo + Estado + Dependientes + OtrosDepend + Salario + Jornada + HorasSemana + DiasSemana + Clasificacion + RiesgoSM + CosteInicio.log, data = claimNet)
coef(claimNet.model)
summary(claimNet.model)
sd(0.7902)
sqrt(0.7902)
0.7902 * 0.7902
coef(claimNet.model)
summary(claimNet.model)
claimNet.model <- glm(CosteFinal.log ~ Edad + Sexo + Estado + Dependientes + OtrosDepend + Salario + Jornada + HorasSemana + DiasSemana + Clasificacion + RiesgoSM + CosteInicio.log, data = claimNet)
coef(claimNet.model)
summary(claimNet.model)
claimNet.model <- lm(CosteFinal.log ~ Edad + Sexo + Estado + Dependientes + OtrosDepend + Salario + Jornada + HorasSemana + DiasSemana + Clasificacion + RiesgoSM + CosteInicio.log, data = claimNet)
coef(claimNet.model)
summary(claimNet.model)
0.7332 * 0.7332
claimNet.model$residuals
sd(claimNet.model$residuals)
sd(claimNet.model$df.residual)
claimNet.model$df.residual
# calculem la desviació dels residuals
sd.res <- sd(claimNet.model$residuals)
# fem la predicció
pred <- exp(predict(claimNet.model, data) + 0.5 * sd.res)
pred
summary(claimNet$CosteFinal)
pred
# fem la predicció
pred <- exp(predict(claimNet.model, data) + 0.5 * sd.res)
pred
summary(claimNet$CosteFinal)
summary(claimNet.model)
# fem la predicció
pred <- exp(predict(claimNet.model, data) + 0.5 *  0.7332 *  0.7332)
pred
# fem la predicció
pred <- exp(predict(claimNet.model, data) + (0.5 * sd.res))
pred
knitr::opts_chunk$set(eval=T, echo=T)
y<- c(20,17,15,19,14,13, 18,17,14,20,13,12, 23,25,20,21,19,20)
fact<-as.factor(c(rep(1,6),rep(2,6),rep(3,6)))
df<-data.frame(y,fact)
str(df)
summary(df)
fact
str(claimNet$Clasificacion)
results<-lm(CosteFinal.log ~ Clasificacion, data=claimNet)
anova(results)
summary(claimNet$Clasificacion)
results<-lm(CosteFinal.log ~ Clasificacion, data=claimNet)
anova(results)
levels(claimNet$Clasificacion)
count(levels(claimNet$Clasificacion))
nlevels(claimNet$Clasificacion)
nrow(claimNet)
qf(0.05, nlevels(claimNet$Clasificacion) - 1, nrow(claimNet) - 1, lower.tail = F)
intervals = TukeyHSD(fm)
results<-lm(CosteFinal.log ~ Clasificacion, data=claimNet)
anova <- anova(results)
anova
intervals = TukeyHSD(anova)
c <- c(anova, claimNet)
intervals = TukeyHSD(c)
class(c)
ggplot(data = claimNet, aes(x = Clasificacion, y = CosteFinal.log, color = Clasificacion)) +
geom_boxplot() +
theme_bw()
library(dplyr)
library(base)
library(matrixStats)
library(stringr)
library(ggplot2)
library(lubridate)
library(eeptools)
library(psych)
library(corrplot)
library(factoextra)
library(ggbiplot)
library(ggpubr)
library(rlang)
library(kableExtra)
library(ResourceSelection)
library(pROC)
library(data.table)
library(nortest)
library(caret)
ggplot(data = claimNet, aes(x = Clasificacion, y = CosteFinal.log, color = Clasificacion)) +
geom_boxplot() +
theme_bw()
ggplot(data = claimNet, aes(x = Clasificacion, y = CosteFinal, color = Clasificacion)) +
geom_boxplot() +
theme_bw()
ggplot(data = claimNet, aes(x = Clasificacion, y = CosteFinal.log, color = Clasificacion)) +
geom_boxplot() +
theme_bw()
summary(anova)
anova
plot(anova)
anova$`Sum Sq`
anova$`Pr(>F)`
results<-lm(CosteFinal.log ~ Clasificacion, data=claimNet)
anova <- anova(results)
anova
qf(0.05, nlevels(claimNet$Clasificacion) - 1, nrow(claimNet) - 1, lower.tail = F)
anova$`Pr(>F)`
anova$Df
anova$`Sum Sq`
anova$`Sum Sq`[0]
anova$`Sum Sq`
190 / (190 + 113707)
results<-aov(CosteFinal.log ~ Clasificacion, data=claimNet)
results
results<-aov(CosteFinal ~ Clasificacion, data=claimNet)
results
results<-lm(CosteFinal.log ~ Clasificacion, data=claimNet)
anova <- anova(results)
anova
lm<-lm(CosteFinal.log ~ Clasificacion, data=claimNet)
anova <- anova(lm)
anova
qf(0.05, nlevels(claimNet$Clasificacion) - 1, nrow(claimNet) - 1, lower.tail = F)
model.tables(anova,type="means")
results<-aov(CosteFinal.log ~ Clasificacion, data=claimNet)
anova(results)
model.tables(results,type="means")
anova$`Mean Sq`
paste('el valor de F és: ', 63.293 / 2.336)
lm<-aov(CosteFinal.log ~ Clasificacion, data=claimNet)
anova <- anova(lm)
anova
lm
library(sjstats)
install.packages(sjstats)
library(lsr)
install.packages("sjstats")
library(sjstats)
eta_sq(lm, partial = TRUE)
eta_squared(lm, partial = TRUE)
eta_sq(lm, partial = TRUE)
eta_sq(lm, partial = FALSE)
cohens_f(lm)
anova_stats(lm)
knitr::opts_chunk$set(eval=T, echo=T)
library(dplyr)
library(base)
library(matrixStats)
library(stringr)
library(ggplot2)
library(lubridate)
library(eeptools)
library(psych)
library(corrplot)
library(factoextra)
library(ggbiplot)
library(ggpubr)
library(rlang)
library(kableExtra)
library(ResourceSelection)
library(pROC)
library(data.table)
library(nortest)
library(caret)
install.packages("sjstats")
library(sjstats)
insurance <- read.csv('trainClean.csv',stringsAsFactors = TRUE, sep = ',')
install.packages("sjstats")
knitr::opts_chunk$set(eval=T, echo=T)
library(dplyr)
library(base)
library(matrixStats)
library(stringr)
library(ggplot2)
library(lubridate)
library(eeptools)
library(psych)
library(corrplot)
library(factoextra)
library(ggbiplot)
library(ggpubr)
library(rlang)
library(kableExtra)
library(ResourceSelection)
library(pROC)
library(data.table)
library(nortest)
library(caret)
install.packages("sjstats")
library(sjstats)
insurance <- read.csv('trainClean.csv',stringsAsFactors = TRUE, sep = ',')
attach(insurance) # ens permet referenciar les columnes de fifa sense haver d'especificar el dataset.
summary(insurance)
cat('Tenim un total de', ncol(insurance), 'columnes\n')
cat('Tenim un total de', nrow(insurance), 'registres')
colSums(is.na(insurance))
head(insurance)
setnames(insurance,"ClaimNumber", "Id")
setnames(insurance,"DateTimeOfAccident", "Ocurrencia")
setnames(insurance,"DateReported", "Apertura")
setnames(insurance,"Age", "Edad")
setnames(insurance,"Gender", "Sexo")
setnames(insurance,"MaritalStatus", "Estado")
setnames(insurance,"DependentChildren", "Dependientes")
setnames(insurance,"DependentsOther", "OtrosDepend")
setnames(insurance,"WeeklyWages", "Salario")
setnames(insurance,"PartTimeFullTime", "Jornada")
setnames(insurance,"InitialIncurredCalimsCost", "CosteInicio")
setnames(insurance,"UltimateIncurredClaimCost", "CosteFinal")
setnames(insurance,"HoursWorkedPerWeek", "HorasSemana")
setnames(insurance,"DaysWorkedPerWeek", "DiasSemana")
setnames(insurance,"ClaimDescription", "Descripcion")
colnames(insurance)
# efectivament Occurencia i Apertura están com a Factor
class(insurance$Ocurrencia)
head(insurance$Ocurrencia)
# passem a Data
insurance$Ocurrencia <- as.Date(insurance$Ocurrencia, format="%Y-%m-%dT%H:%M:%SZ")
class(insurance$Ocurrencia)
head(insurance$Ocurrencia)
# fem el mateix amb Apertura
class(insurance$Apertura)
head(insurance$Apertura)
# passem a Data
insurance$Apertura <- as.Date(insurance$Apertura, format="%Y-%m-%dT%H:%M:%SZ")
class(insurance$Apertura)
head(insurance$Apertura)
insurance$Tiempo <- age_calc(insurance$Ocurrencia, enddate = insurance$Apertura, units = "days")
head(insurance$Tiempo)
insurance$Tiempo <- as.integer(insurance$Tiempo)
insurance$Clasificacion <- ''
insurance$Clasificacion <- ifelse(insurance$Tiempo >= 90, 'Molt lent', insurance$Clasificacion)
insurance$Clasificacion <- ifelse(insurance$Tiempo <= 89 & insurance$Tiempo >= 31, 'Lent', insurance$Clasificacion)
insurance$Clasificacion <- ifelse(insurance$Tiempo <= 30 & insurance$Tiempo >= 16, 'Rapid', insurance$Clasificacion)
insurance$Clasificacion <- ifelse(insurance$Tiempo < 16, 'Molt Rapid', insurance$Clasificacion)
insurance$Clasificacion <- as.factor(insurance$Clasificacion)
## Descripcion
nlevels(insurance$Descripcion)
## Sexo
summary(insurance$Sexo)
## Estado
summary.factor(insurance$Estado)
insurance$Sexo[insurance$Sexo== "U"] <- NA
insurance$Estado[insurance$Estado== "U"] <- NA
insurance$Estado[insurance$Estado== ""] <- NA
colSums(is.na(insurance))
cat('Tenim un ', 2/nrow(insurance) * 100, '% de NA a Sexo\n')
cat('Tenim un ', (5294+2)/nrow(insurance) * 100, '% de NA a Estado')
claimNet <- subset(insurance, !is.na(insurance$Sexo))
# esborrem els levels buïts
claimNet$Sexo <- droplevels(claimNet$Sexo)
claimNet <- subset(claimNet, !is.na(claimNet$Estado))
# esborrem els levels buïts
claimNet$Estado <- droplevels(claimNet$Estado)
colSums(is.na(claimNet))
cat('Hem eliminat un ', (nrow(insurance) - nrow(claimNet)) / nrow(insurance) * 100, '% de registres')
strings <- c("Stress", "Anxiety", "Harassment", "Depression")
regex <- regex(strings,ignore_case = TRUE)
claimNet$RiesgoSM <- str_detect(claimNet$Descripcion, regex)
claimNet$RiesgoSM <- as.factor(claimNet$RiesgoSM)
summary(claimNet$RiesgoSM)
boxplot(CosteFinal ~ Sexo, data = claimNet, log = "y")
boxplot(CosteFinal ~ Estado, data = claimNet, log = "y")
boxplot(CosteFinal ~ Clasificacion, data = claimNet, log = "y")
boxplot(CosteFinal ~ RiesgoSM, data = claimNet, log = "y")
summary(claimNet$CosteFinal)
boxplot(claimNet$CosteFinal, data = claimNet, log = "y")
hist(claimNet$CosteFinal, breaks=100)
y = dnorm(claimNet$CosteFinal, mean(claimNet$CosteFinal), sd(claimNet$CosteFinal))
plot(claimNet$CosteFinal, y)
lillie.test(claimNet$CosteFinal)
ggplot(mapping= aes(x=claimNet$CosteFinal))+ geom_density() + scale_x_continuous(trans='log')
lillie.test(log(claimNet$CosteFinal))
qnorm(0.975)
sd <- sd(claimNet$CosteFinal)
alfa <- 1- 0.95
n <- nrow(claimNet)
SE <- sd / sqrt(n)
z <- qnorm(alfa/2, lower.tail=FALSE)
L <- mean(claimNet$CosteFinal) - z*SE
U <- mean(claimNet$CosteFinal) + z*SE
round(c(L,U), 2)
alfa <- 1-0.95
sd <- sd(claimNet$CosteFinal)
n <- nrow(claimNet)
SE <- sd / sqrt(n)
z <- qt(alfa/2, df=n-1, lower.tail=FALSE)
L <- mean(claimNet$CosteFinal) - z*SE
U <- mean(claimNet$CosteFinal) + z*SE
round( c(L,U), 2)
t.test(claimNet$CosteFinal, conf.level = 0.95)
summary(claimNet$Sexo)
# seleccionem grups per sexe
claimNet.Hombres <- subset(claimNet, claimNet$Sexo == 'M')
claimNet.Mujeres <- subset(claimNet, claimNet$Sexo == 'F')
# el nivell de confiança és del 95% per tant tenim una alpha de 0.05 (P=0.95)
alfa <- 0.05
# calculem les desviacions de les mostres
sd1 <- sd(claimNet.Hombres$CosteFinal)
sd2 <- sd(claimNet.Mujeres$CosteFinal)
# calculem les mitjes de les mostres
mean1 <- mean(claimNet.Hombres$CosteFinal)
mean2 <- mean(claimNet.Mujeres$CosteFinal)
# elements de les mostres
n1 <- length(claimNet.Hombres$CosteFinal)
n2 <- length(claimNet.Mujeres$CosteFinal)
# valor observat de la mostra
fobs <- sd1^2 / sd2^2
cat("El valor observat és:", fobs, "\n")
# llindar inferior de la zona d'acceptació
fcritL <- qf(alfa/2, df1=n1-1, df2=n2-2)
cat("El llindar inferior és:", fcritL, "\n")
# llindar superior de la zona d'acceptació
fcritU <- qf(1 - alfa/2, df1=n1-1, df2=n2-2)
cat("El llindar superior és:", fcritU, "\n")
# calculem la probabilitat d'obtenir el valor observat assumint que la hipòtesi nul·la és certa. Si p < alpha, podem rebutjar la hipòtesi nul·la.
pvalue <- min(pf(fobs, df1=n1-1, df2=n2-2, lower.tail=FALSE ), pf(fobs, df1=n1-1, df2=n2-2))*2
cat("El valor de p és:", pvalue, "\n")
# càlculs de mean, n i s
mean_Hombres <- mean(claimNet.Hombres$CosteFinal)
cat("mean_Hombres és:", mean_Hombres, "\n")
mean_Mujeres <- mean(claimNet.Mujeres$CosteFinal)
cat("mean_Mujeres és:", mean_Mujeres, "\n")
n_Hombres <- length(claimNet.Hombres$CosteFinal)
cat("n_Hombres és:", n_Hombres, "\n")
n_Mujeres <- length(claimNet.Mujeres$CosteFinal)
cat("n_Mujeres és:", n_Mujeres, "\n")
s_Hombres <- sd(claimNet.Hombres$CosteFinal)
cat("s_Hombres és:", s_Hombres, "\n")
s_Mujeres <- sd(claimNet.Mujeres$CosteFinal)
cat("s_Mujeres és:", s_Mujeres, "\n")
# estadístic de contrast
obs_value <- (mean_Mujeres - mean_Hombres - 1000) / (sqrt((s_Hombres^2 / n_Hombres) + (s_Mujeres^2 / n_Mujeres)))
cat("L'estadístic de contrast o valor observat és:", round(obs_value, 3), "\n")
# graus de llibertat
v <- ((s_Hombres^2 / n_Hombres) + (s_Mujeres^2 / n_Mujeres))^2 / (((s_Hombres^2 / n_Hombres)^2 / (n_Hombres - 1)) + ((s_Mujeres^2 / n_Mujeres)^2 / (n_Mujeres - 1)))
cat("Els graus de llibertat són:", round(v,1), "\n")
# valor crític on rebutjem la H0 en favor de la alternativa.
# com volem la part superior de la corva, fem lower.tail = FALSE
critical <- qt(0.005, lower.tail = FALSE, df=round(v,1)-1)
cat("La regió d'acceptació de la hipòtesi nul·la està entre ( -infinit,", critical, "]\n")
# Càlcul del valor pvalue
pvalue <- pt(obs_value, lower.tail = FALSE, df=round(v,1)-1)
cat("La probabilitat de que rebutjar la hipòtesi sigui nul·la incorrecte és:", pvalue, "\n")
t.test(claimNet.Mujeres$CosteFinal, claimNet.Hombres$CosteFinal,alternative="greater", var.equal=FALSE, mu = 1000)
claimNet$CosteFinal.log <- log(claimNet$CosteFinal)
claimNet$CosteInicio.log <- log(claimNet$CosteInicio)
claimNet.model <- lm(CosteFinal.log ~ Edad + Sexo + Estado + Dependientes + OtrosDepend + Salario + Jornada + HorasSemana + DiasSemana + Clasificacion + RiesgoSM + CosteInicio.log, data = claimNet)
coef(claimNet.model)
summary(claimNet.model)
claimNet.model$fitted.values
summary(claimNet.model$residuals)
confint(claimNet.model)
residus <- rstandard(claimNet.model)
valors.ajustats <- fitted(claimNet.model)
plot(valors.ajustats, residus)
model.stdres = rstandard(claimNet.model)
qqnorm(model.stdres,
ylab="Standardized Residuals",
xlab="Normal Scores",
main="QQ Plot")
qqline(model.stdres)
d<-density(claimNet.model[['residuals']])
plot(d,main='Residual KDE Plot',xlab='Residual value')
lillie.test(claimNet.model$residuals)
data = data.frame(Edad=24, Sexo= "F", Estado="S", Dependientes=1, OtrosDepend=0, Salario=500, Jornada="F", HorasSemana=40, DiasSemana=5, Clasificacion="Lent", RiesgoSM="TRUE", CosteInicio.log=log(10000))
predict(claimNet.model, data)
summary(claimNet.model)
# calculem la desviació dels residuals
sd.res <- sd(claimNet.model$residuals)
# fem la predicció
pred <- exp(predict(claimNet.model, data) + (0.5 * sd.res))
pred
claimNet$Deficit <- ifelse(claimNet$CosteInicio >= claimNet$CosteFinal, 0, 1)
model.logist=glm(formula=Deficit ~ Edad + Sexo + Estado + Dependientes + OtrosDepend + Salario + Jornada + HorasSemana + DiasSemana + Clasificacion + RiesgoSM + log(CosteInicio), data = claimNet, family=binomial(link=logit))
summary(model.logist)
confint(model.logist)
exp(coefficients(model.logist))
hoslem.test(claimNet$Deficit,fitted(model.logist))
prob=predict(model.logist, claimNet, type="response")
r=roc(claimNet$Deficit,prob, data=claimNet)
plot(r)
auc(r)
pdata <- predict(model.logist, newdata = claimNet, type = "response")
pdata <- ifelse(pdata >= 0.5, 1, 0)
confusionMatrix(data = as.factor(pdata) , reference = as.factor(claimNet$Deficit))
(9764 + 22054) / (9764 + 22054 + 10957 + 5900)
9764 / (9764 + 10957)
22054 / (22054 + 5900)
data <- data.frame(Edad=20, Sexo='M',Estado='S',Dependientes=0,OtrosDepend=0,Salario=300,Jornada='P',HorasSemana=30,DiasSemana=5,Clasificacion='Molt lent',RiesgoSM='FALSE',CosteInicio=log(10000))
pred<-predict(model.logist, data,type ="response")
pred
ggplot(data = claimNet, aes(x = Clasificacion, y = CosteFinal.log, color = Clasificacion)) +
geom_boxplot() +
theme_bw()
lm<-lm(CosteFinal.log ~ Clasificacion, data=claimNet)
anova <- anova(lm)
anova
qf(0.05, nlevels(claimNet$Clasificacion) - 1, nrow(claimNet) - 1, lower.tail = F)
paste('El valor de F és: ', 63.293 / 2.336)
190 / (190 + 113707)
claimNet.model$qr
claimNet.model$df.residual
claimNet.model$residuals
summary(claimNet.model)
claimNet.model$rank
claimNet.model$rank
claimNet.model$
class(claimNet.model)
class(claimNet.model)
claimNet.model$r.squared
summary(claimNet.model)$r.squared
library(dplyr)
library(base)
library(matrixStats)
library(stringr)
library(ggplot2)
library(lubridate)
library(eeptools)
library(psych)
library(corrplot)
library(factoextra)
library(ggbiplot)
library(ggpubr)
library(rlang)
library(kableExtra)
library(ResourceSelection)
library(pROC)
library(data.table)
library(nortest)
library(caret)
library(agricolae)
library(agricolae)
library(agricolae)
library(dplyr)
library(base)
library(matrixStats)
library(stringr)
library(ggplot2)
library(lubridate)
library(eeptools)
library(psych)
library(corrplot)
library(factoextra)
library(ggbiplot)
library(ggpubr)
library(rlang)
library(kableExtra)
library(ResourceSelection)
library(pROC)
library(data.table)
library(nortest)
library(caret)
library(agricolae)
install.packages("agricolae")
library(agricolae)
install.packages("sf")
library(agricolae)
install.packages("agricolae")
